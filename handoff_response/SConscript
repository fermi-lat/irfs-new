# -*- python -*-
# $Id$
# Authors: Toby Burnett <tburnett@u.washington.edu>, J. Chiang <jchiang@slac.stanford.edu>
# Version: handoff_response-05-02-00

Import('baseEnv')
Import('listFiles')
progEnv = baseEnv.Clone()
libEnv = baseEnv.Clone()

handoff_responseLib = libEnv.StaticLibrary('handoff_response',
                                           listFiles(['src/*.cxx',
                                                      'src/gen/*.cxx',
                                                      'src/irfs/*.cxx',
                                                      'src/fits/*.cxx']))

if 'makeStatic' in baseEnv:
    progEnv.Tool('registerTargets', package = 'handoff_response',
                 staticLibraryCxts = [[handoff_responseLib, libEnv]],
                 pfiles = listFiles(['pfiles/*.par']),
                 includes = listFiles(['handoff_response/*.h']),
                 data = listFiles(['data/*'], recursive = True))
else:
    progEnv.Tool('handoff_responseLib')
    progEnv.Tool('st_appLib')
    testEnv = progEnv.Clone();
    testEnv.Tool('addLibrary', library = progEnv['cppunitLibs'])
    test_handoff_responseBin = testEnv.Program('test_handoff_response',
                                               listFiles(['src/test/*.cxx']))
    pruneBin = progEnv.Program('prune', listFiles(['src/gen/prune/*.cxx']))
    makeirfBin = progEnv.Program('makeirf',
                                 listFiles(['src/gen/makeirf/*.cxx']))
    makefitsBin = progEnv.Program('makefits',
                                  listFiles(['src/fits/make_fits/*.cxx']))

    progEnv.Tool('registerTargets', package = 'handoff_response',
                 staticLibraryCxts = [[handoff_responseLib, libEnv]],
                 testAppCxts = [[test_handoff_responseBin, testEnv]],
                 binaryCxts = [[pruneBin, progEnv], [makeirfBin, progEnv],
                               [makefitsBin, progEnv]],
                 pfiles = listFiles(['pfiles/*.par']),
                 includes = listFiles(['handoff_response/*.h']),
                 data = listFiles(['data/*'], recursive = True))
